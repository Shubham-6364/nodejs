pipeline {
    agent any

    environment {
        IMAGE_NAME = "codersdiary/nodejs-app"
        SONARQUBE = "SonarQubeServer"
    }

    tools {
        nodejs "NodeJS" // Name must match NodeJS tool configured in Jenkins
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Shubham-6364/nodejs.git'

            }
        }

        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }

       stage('SonarQube Analysis') {
    steps {
        withSonarQubeEnv('SonarQubeServer') {
            sh '''
                export PATH=$PATH:/opt/sonar-scanner/bin
                sonar-scanner
            '''
        }
    }
}

        stage('Build Docker Image') {
            steps {
                sh "docker build -t $IMAGE_NAME:${BUILD_NUMBER} ."
            }
        }

        stage('Scan with Trivy') {
            steps {
                sh "trivy image $IMAGE_NAME:${BUILD_NUMBER} || true"
            }
        }

        stage('Push to DockerHub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh """
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker push $IMAGE_NAME:${BUILD_NUMBER}
                    """
                }
            }
        }
    }

    post {
        always {
            sh "docker rmi $IMAGE_NAME:${BUILD_NUMBER} || true"
        }
    }
}
